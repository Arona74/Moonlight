plugins {
    id "architectury-plugin" version "3.4-SNAPSHOT"
    id "dev.architectury.loom" version "1.4-SNAPSHOT" apply false
    id "com.matthewprenger.cursegradle" version "1.4.0"
    id "com.modrinth.minotaur" version "2.8.4"
}

architectury {
    minecraft = rootProject.minecraft_version
}


subprojects {
    apply plugin: "dev.architectury.loom"
    apply plugin: "com.matthewprenger.cursegradle"
    apply plugin: "com.modrinth.minotaur"


    loom {
        silentMojangMappingsLicense()
    }

    dependencies {
        minecraft "com.mojang:minecraft:${rootProject.minecraft_version}"
        mappings loom.layered() {

            it.parchment("org.parchmentmc.data:parchment-${rootProject.parchment_version}")
            it.officialMojangMappings {
                setNameSyntheticMembers(false)
            }
        }
    }

    var env = System.getenv()
    var modLoader = name

    var changelogFile = rootProject.file("changelog.md")
    var changelogText = changelogFile.exists() ? changelogFile.text : ""

    if (env.MODRINTH_TOKEN) {
        modrinth {
            projectId = mod_id
            uploadFile = tasks.remapJar
            gameVersions = [minecraft_version]
            loaders = [modLoader]
            changelog = changelogText
            versionNumber = modLoader + "_" + mod_version
            versionType = "release"

            if (modLoader == "fabric") {
                dependencies {
                    required.project "fabric-api"
                }
            } else {
            }
        }
    }

    if (env.CURSEFORGE_TOKEN) {
        curseforge {
            apiKey = env.CURSEFORGE_TOKEN
            project {
                id = rootProject.project_id
                changelog = changelogText
                changelogType = 'markdown'
                releaseType = 'release'
                addGameVersion rootProject.minecraft_version
                if(modLoader == "forge") modLoader = "NeoForge"
                addGameVersion modLoader.capitalize()

                mainArtifact(tasks.remapJar)

                if (modLoader == "fabric") {
                    relations {
                        requiredDependency "fabric-api"
                    }
                } else {
                }
            }
        }
    }
}

allprojects {
    apply plugin: "java"
    apply plugin: "architectury-plugin"
    apply plugin: "maven-publish"

    archivesBaseName = rootProject.mod_id
    version = rootProject.mod_version
    group = rootProject.maven_group

    repositories {

        flatDir {
            dirs 'mods'
        }

        mavenLocal()

        maven { url "https://maven.parchmentmc.org" }

        maven {
            url = "https://www.cursemaven.com"
            allowInsecureProtocol = true
        }

        maven { url 'https://jitpack.io' }
        maven {
            url = 'https://maven.neoforged.net'
        }
    }

    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.release = 17
    }

    java {
        withSourcesJar()

    }
}
